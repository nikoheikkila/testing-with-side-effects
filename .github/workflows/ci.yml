name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Lint, Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check code formatting with Biome
        run: bun lint

      - name: Run tests
        run: bun test

      - name: Build application
        run: bun compile

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  test:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Run test
        run: |
          chmod +x app
          ./app "Hello world"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Generate TrunkVer tag
        id: version
        run: |
          TAG="$(date +%Y%m%d%H%M%S)-${{ github.sha }}-${{ github.run_number }}"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create and push tag
        run: |
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"
        env:
          TAG: ${{ steps.version.outputs.tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        run: |
          gh release create "$TAG" --title "Release $TAG" --generate-notes ./dist/*
        env:
          TAG: ${{ steps.version.outputs.tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
